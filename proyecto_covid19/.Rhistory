predict(covid.test.prep) %>%
bind_cols(covid.test.prep) %>%
metrics(truth = FALLECIDO, estimate = .pred_class)
summary(covid.lr.model$fit)
covid.recipe = recipe(FALLECIDO ~ EDAD + DIABETES +
ASMA + INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO, data = covid.train)
model.recipe.steps = covid.recipe %>%
step_mutate(FALLECIDO = as.factor(FALLECIDO))
prepped.recipe = prep(model.recipe.steps, training = covid.train)
covid.train.prep = bake(prepped.recipe, covid.train)
covid.test.prep = bake(prepped.recipe, covid.test)
covid.lr.model = logistic_reg(mode = "classification") %>%
set_engine("glm") %>%
fit(FALLECIDO ~ EDAD + DIABETES +
ASMA + INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO, data = covid.train.prep)
covid.lr.model %>%
predict(covid.test.prep) %>%
bind_cols(covid.test.prep) %>%
metrics(truth = FALLECIDO, estimate = .pred_class)
summary(covid.lr.model$fit)
sum(covid.test.prep$FALLECIDO)
sumMARY(covid.test.prep$FALLECIDO)
summary(covid.test.prep$FALLECIDO)
summary(covid.lr.model$fit)
covid.recipe = recipe(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO, data = covid.train)
model.recipe.steps = covid.recipe %>%
step_mutate(FALLECIDO = as.factor(FALLECIDO))
prepped.recipe = prep(model.recipe.steps, training = covid.train)
covid.train.prep = bake(prepped.recipe, covid.train)
covid.test.prep = bake(prepped.recipe, covid.test)
covid.lr.model = logistic_reg(mode = "classification") %>%
set_engine("glm") %>%
fit(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO, data = covid.train.prep)
covid.lr.model %>%
predict(covid.test.prep) %>%
bind_cols(covid.test.prep) %>%
metrics(truth = FALLECIDO, estimate = .pred_class)
summary(covid.lr.model$fit)
covid.recipe = recipe(FALLECIDO ~ EDAD + DIABETES +
HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO, data = covid.train)
model.recipe.steps = covid.recipe %>%
step_mutate(FALLECIDO = as.factor(FALLECIDO))
prepped.recipe = prep(model.recipe.steps, training = covid.train)
covid.train.prep = bake(prepped.recipe, covid.train)
covid.test.prep = bake(prepped.recipe, covid.test)
covid.lr.model = logistic_reg(mode = "classification") %>%
set_engine("glm") %>%
fit(FALLECIDO ~ EDAD + DIABETES +
HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO, data = covid.train.prep)
covid.lr.model %>%
predict(covid.test.prep) %>%
bind_cols(covid.test.prep) %>%
metrics(truth = FALLECIDO, estimate = .pred_class)
summary(covid.lr.model$fit)
INMUSUPR +
s
covid.recipe = recipe(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO, data = covid.train)
model.recipe.steps = covid.recipe %>%
step_mutate(FALLECIDO = as.factor(FALLECIDO))
prepped.recipe = prep(model.recipe.steps, training = covid.train)
covid.train.prep = bake(prepped.recipe, covid.train)
covid.test.prep = bake(prepped.recipe, covid.test)
covid.lr.model = logistic_reg(mode = "classification") %>%
set_engine("glm") %>%
fit(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO, data = covid.train.prep)
covid.lr.model %>%
predict(covid.test.prep) %>%
bind_cols(covid.test.prep) %>%
metrics(truth = FALLECIDO, estimate = .pred_class)
summary(covid.lr.model$fit)
covid.recipe = recipe(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO + TABAQUISMO*EPOC, data = covid.train)
model.recipe.steps = covid.recipe %>%
step_mutate(FALLECIDO = as.factor(FALLECIDO))
prepped.recipe = prep(model.recipe.steps, training = covid.train)
covid.train.prep = bake(prepped.recipe, covid.train)
covid.test.prep = bake(prepped.recipe, covid.test)
covid.lr.model = logistic_reg(mode = "classification") %>%
set_engine("glm") %>%
fit(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO +  + TABAQUISMO*EPOC, data = covid.train.prep)
covid.lr.model = logistic_reg(mode = "classification") %>%
set_engine("glm") %>%
fit(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO +  + TABAQUISMO*EPOC, data = covid.train.prep)
covid.recipe = recipe(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO + TABAQUISMO*EPOC, data = covid.train)
model.recipe.steps = covid.recipe %>%
step_mutate(FALLECIDO = as.factor(FALLECIDO))
prepped.recipe = prep(model.recipe.steps, training = covid.train)
covid.train.prep = bake(prepped.recipe, covid.train)
covid.test.prep = bake(prepped.recipe, covid.test)
covid.lr.model = logistic_reg(mode = "classification") %>%
set_engine("glm") %>%
fit(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO +  + TABAQUISMO*EPOC, data = covid.train.prep)
covid.lr.model %>%
predict(covid.test.prep) %>%
bind_cols(covid.test.prep) %>%
metrics(truth = FALLECIDO, estimate = .pred_class)
summary(covid.lr.model$fit)
View(covid.train.prep)
View(covid.train.prep)
covid.recipe = recipe(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO + TABAQUISMO*EPOC, data = covid.train)
covid.recipe = recipe(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO + TABAQUISMO*EPOC, data = covid.train)
covid.recipe = recipe(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO + TABAQUISMO, data = covid.train)
covid.recipe = recipe(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO + TABAQUISMO:EPOC, data = covid.train)
View(covid.data)
covid.recipe = recipe(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO + TABAQUISMO:EPOC, data = covid.train)
covid.lr.model = logistic_reg(mode = "classification") %>%
set_engine("glm") %>%
fit(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO + TABAQUISMO*EPOC, data = covid.train.prep)
covid.lr.model = logistic_reg(mode = "classification") %>%
set_engine("glm") %>%
fit(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO + TABAQUISMO:EPOC, data = covid.train.prep)
covid.lr.model = logistic_reg(mode = "classification") %>%
set_engine("glm") %>%
fit(FALLECIDO ~ EDAD + DIABETES +
INMUSUPR + HIPERTENSION +
OBESIDAD + RENAL_CRONICA +
OTRO_CASO, data = covid.train.prep)
covid.lr.model %>%
predict(covid.test.prep) %>%
bind_cols(covid.test.prep) %>%
metrics(truth = FALLECIDO, estimate = .pred_class)
summary(covid.lr.model$fit)
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" % FALLECIDO == 1) %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" % "FALLECIDO" == 1) %>%
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & "FALLECIDO" == 1) %>%
select(DIABETES) %>%
data.matrix() %>%
mean()
View(covid.data)
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & "FALLECIDO" == "1") %>%
select(DIABETES) %>%
data.matrix() %>%
mean()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & "FALLECIDO" == "1") %>%
select(EPOC) %>%
data.matrix() %>%
mean()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & "FALLECIDO" == "1") %>%
select(EPOC) %>%
data.matrix() %>%
count()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & "FALLECIDO" == "1") %>%
select(EPOC) %>%
comorbilidades_freq <- tribble(
~comorbilidad,         ~porcentaje,
"DIABETES", 0.3,
"EPOC", 0.038,
"ASMA", 0.023,
"INMUSUPR", 0.026,
"HIPERTENSION", 0.33,
"OTRAS_COM", 0.042,
"CARDIOVASCULAR", 0.042,
"OBESIDAD", 0.24,
"RENAL_CRONICA", 0.046,
"TABAQUISMO", 0.086,
"OTRO_CASO", 0.14
)
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & "FALLECIDO" == "1") %>%
select(EPOC)
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & "FALLECIDO" == "0") %>%
select(EPOC)
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO") %>%
select(EPOC) %>%
data.matrix() %>%
mean()
View(covid.data)
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & FALLECIDO == "1") %>%
select(EPOC) %>%
data.matrix() %>%
mean()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & FALLECIDO == "1") %>%
select(DIABETES) %>%
data.matrix() %>%
mean()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & FALLECIDO == "1") %>%
select(EPOC) %>%
data.matrix() %>%
mean()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & FALLECIDO == "1") %>%
select(ASMA) %>%
data.matrix() %>%
mean()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & FALLECIDO == "1") %>%
select(INMUSUPR) %>%
data.matrix() %>%
mean()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & FALLECIDO == "1") %>%
select(HIPERTENSION) %>%
data.matrix() %>%
mean()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & FALLECIDO == "1") %>%
select(OTRAS_COM) %>%
data.matrix() %>%
mean()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & FALLECIDO == "1") %>%
select(OTRA_COM) %>%
data.matrix() %>%
mean()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & FALLECIDO == "1") %>%
select(CARDIOVASCULAR) %>%
data.matrix() %>%
mean()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & FALLECIDO == "1") %>%
select(OBESIDAD) %>%
data.matrix() %>%
mean()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & FALLECIDO == "1") %>%
select(RENAL_CRONICA) %>%
data.matrix() %>%
mean()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & FALLECIDO == "1") %>%
select(TABAQUISMO) %>%
data.matrix() %>%
mean()
covid.data %>%
filter(RESULTADO == "Positivo SARS-CoV-2" & TIPO_PACIENTE == "HOSPITALIZADO" & FALLECIDO == "1") %>%
select(OTRO_CASO) %>%
data.matrix() %>%
mean()
comorbilidades_freq <- tribble(
~comorbilidad,         ~porcentaje,
"DIABETES", 0.38,
"EPOC", 0.055,
"ASMA", 0.022,
"INMUSUPR", 0.031,
"HIPERTENSION", 0.42,
"OTRAS_COM", 0.046,
"CARDIOVASCULAR", 0.056,
"OBESIDAD", 0.26,
"RENAL_CRONICA", 0.07,
"TABAQUISMO", 0.094,
"OTRO_CASO", 0.11
)
comorbilidades_freq %>%
ggplot(aes(x=reorder(comorbilidad, -porcentaje), y=porcentaje)) +
geom_bar(stat="identity", colour="black", fill="steelblue", width = 0.3) +
theme_light() +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
labs(x = "Comorbilidad") +
labs(y = "Porcentaje")
-----
# PCA
-----
pr = covid.data %>%
select(DIABETES, EPOC, ASMA, INMUSUPR, HIPERTENSION,
OTRA_COM, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA,
TABAQUISMO, OTRO_CASO) %>%
prcomp()
-----
# PCA
-----
covid.data %>%
select(DIABETES, EPOC, ASMA, INMUSUPR, HIPERTENSION,
OTRA_COM, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA,
TABAQUISMO, OTRO_CASO) %>%
prcomp()
-----
# PCA
-----
covid.data %>%
select(DIABETES, EPOC, ASMA, INMUSUPR, HIPERTENSION,
OTRA_COM, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA,
TABAQUISMO, OTRO_CASO)
covid.data %>%
select(DIABETES, EPOC, ASMA, INMUSUPR, HIPERTENSION,
OTRA_COM, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA,
TABAQUISMO, OTRO_CASO)
covid.data %>%
select(DIABETES, EPOC, ASMA, INMUSUPR, HIPERTENSION,
OTRA_COM, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA,
TABAQUISMO, OTRO_CASO) %>%
prcomp()
pr = covid.data %>%
select(DIABETES, EPOC, ASMA, INMUSUPR, HIPERTENSION,
OTRA_COM, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA,
TABAQUISMO, OTRO_CASO) %>%
prcomp()
plot(pr, type = "l")
plot(cumsum(pr$sdev[1:5]^2)/sum(pr$sdev^2), xlab = "Num of PC", ylab = "Explained variance", type = "b")
summary(pr)
plot(pr, type = "l")
plot(cumsum(pr$sdev[1:5]^2)/sum(pr$sdev^2), xlab = "Num of PC", ylab = "Explained variance", type = "b")
plot(cumsum(pr$sdev[1:8]^2)/sum(pr$sdev^2), xlab = "Num of PC", ylab = "Explained variance", type = "b")
summary(pr)
plot(pr, type = "l")
covid.data.pca = covid.data %>%
select(DIABETES, EPOC, ASMA, INMUSUPR, HIPERTENSION,
OTRA_COM, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA,
TABAQUISMO, OTRO_CASO) %>%
predict(pr) %>%
as.data.frame()
spam.pca = as.data.frame(predict(pr, newdata = covid.data))
covid.data.pca = as.data.frame(predict(pr, newdata = covid.data))
View(covid.data.pca)
pr$rotation
pr$x
covid.data.pca = pr$x
View(covid.data.pca)
pr$x
pr$rotation
library(mclust)
install.packages("mclust")
library(mclust)
km <- kmeans(covid.data.pca, centers=3)
km.labels <- km$cluster
covid.data.pca = pr$x[1:2]
covid.data.pca = pr$x[,1:2]
View(covid.data.pca)
km <- kmeans(covid.data.pca, centers=3)
km.labels <- km$cluster
# Visualize clustering k means with PCA
plot(pr, col=km.labels)
text(pr, labels=rownames(usair.data), cex=0.75, pos=2, xpd=NA)
plot(covid.data.pca, col=km.labels)
text(pr, labels=rownames(usair.data), cex=0.75, pos=2, xpd=NA)
km <- kmeans(covid.data.pca, centers=4)
km.labels <- km$cluster
# Visualize clustering k means with PCA
plot(covid.data.pca, col=km.labels)
km <- kmeans(covid.data.pca, centers=4)
km.labels <- km$cluster
# Visualize clustering k means with PCA
plot(covid.data.pca, col=km.labels)
km <- kmeans(covid.data.pca, centers=3)
km.labels <- km$cluster
# Visualize clustering k means with PCA
plot(covid.data.pca, col=km.labels)
km <- kmeans(covid.data.pca, centers=2)
km.labels <- km$cluster
# Visualize clustering k means with PCA
plot(covid.data.pca, col=km.labels)
km <- kmeans(covid.data.pca, centers=5)
km.labels <- km$cluster
# Visualize clustering k means with PCA
plot(covid.data.pca, col=km.labels)
km <- kmeans(covid.data.pca, centers=4)
km.labels <- km$cluster
# Visualize clustering k means with PCA
plot(covid.data.pca, col=km.labels)
km <- kmeans(covid.data.pca, centers=6)
km.labels <- km$cluster
# Visualize clustering k means with PCA
plot(covid.data.pca, col=km.labels)
n <- nrow(covid.data.pca)
wss <- rep(0, 6)
wss[1] <- (n-1)*sum(sapply(covid.data.pca, var))
for (i in 2:6)
wss[i] <- sum(kmeans(covid.data.pca, centers=i)$withinss)
plot(1:6, wss, type = "b", xlab = "Number of groups", ylab = "Within groups sum of squares")
n <- nrow(covid.data.pca)
wss <- rep(0, 8)
wss[1] <- (n-1)*sum(sapply(covid.data.pca, var))
for (i in 2:6)
wss[i] <- sum(kmeans(covid.data.pca, centers=i)$withinss)
plot(1:6, wss, type = "b", xlab = "Number of groups", ylab = "Within groups sum of squares")
plot(1:8, wss, type = "b", xlab = "Number of groups", ylab = "Within groups sum of squares")
for (i in 2:8)
wss[i] <- sum(kmeans(covid.data.pca, centers=i)$withinss)
plot(1:8, wss, type = "b", xlab = "Number of groups", ylab = "Within groups sum of squares")
n <- nrow(covid.data.pca)
wss <- rep(0, 8)
wss[1] <- (n-1)*sum(sapply(covid.data.pca, var))
for (i in 2:8)
wss[i] <- sum(kmeans(covid.data.pca, centers=i)$withinss)
plot(1:8, wss, type = "b", xlab = "Number of groups", ylab = "Within groups sum of squares")
plot(pr, type = "l")
plot(cumsum(pr$sdev[1:8]^2)/sum(pr$sdev^2), xlab = "Num of PC", ylab = "Explained variance", type = "b")
plot(pr, type = "l")
plot(cumsum(pr$sdev[1:11]^2)/sum(pr$sdev^2), xlab = "Num of PC", ylab = "Explained variance", type = "b")
summary(pr)
pr$rotation
pr$rotation[,1]
plot(pr$rotation[,1])
text(pr, labels=rownames(pr$rotation[,1]), cex=0.75, pos=2, xpd=NA)
text(pr$rotation[,1], labels=rownames(pr$rotation[,1]), cex=0.75, pos=2, xpd=NA)
text(pr$rotation[,1], labels=rownames(pr$rotation[,1]), cex=0.75, pos=2, xpd=NA)
rownames(pr$rotation[,1])
pr$rotation[,1]
typeof(pr$rotation[,1])
pr$rotation[,1]
pr$rotation[1,1]
pr$rotation[2,1]
pr$rotation[1,1]
pr$rotation[,1]
pc1 = pr$rotation[,1]
names(pr$rotation[,1])
text(pr$rotation[,1], labels=names(pr$rotation[,1]), cex=0.75, pos=2, xpd=NA)
# Visualize clustering k means with PCA
plot(covid.data.pca, col=km.labels)
text(pr$rotation[,1], labels=names(pr$rotation[,1]), cex=0.75, pos=1, xpd=NA)
plot(pr$rotation[,1])
text(pr$rotation[,1], labels=names(pr$rotation[,1]), cex=0.75, pos=1, xpd=NA)
pr = covid.data %>%
select(DIABETES, EPOC, ASMA, INMUSUPR, HIPERTENSION,
OTRA_COM, CARDIOVASCULAR, OBESIDAD, RENAL_CRONICA,
TABAQUISMO) %>%
prcomp()
plot(pr, type = "l")
plot(cumsum(pr$sdev[1:11]^2)/sum(pr$sdev^2), xlab = "Num of PC", ylab = "Explained variance", type = "b")
summary(pr)
plot(pr$rotation[,1])
text(pr$rotation[,1], labels=names(pr$rotation[,1]), cex=0.75, pos=1, xpd=NA)
# PC2
plot(pr$rotation[,2])
text(pr$rotation[,2], labels=names(pr$rotation[,2]), cex=0.75, pos=1, xpd=NA)
# PC2
plot(pr$rotation[,3])
text(pr$rotation[,3], labels=names(pr$rotation[,3]), cex=0.75, pos=1, xpd=NA)
# PC2
plot(pr$rotation[,4])
text(pr$rotation[,4], labels=names(pr$rotation[,4]), cex=0.75, pos=1, xpd=NA)
# PC2
plot(pr$rotation[,2])
text(pr$rotation[,2], labels=names(pr$rotation[,2]), cex=0.75, pos=1, xpd=NA)
covid.data.pca = pr$x[,1:2]
n <- nrow(covid.data.pca)
wss <- rep(0, 8)
wss[1] <- (n-1)*sum(sapply(covid.data.pca, var))
for (i in 2:8)
wss[i] <- sum(kmeans(covid.data.pca, centers=i)$withinss)
install.packages("factoextra")
library(factoextra)
fviz_pca_var(pr,
col.var = "contrib", # Color by contributions to the PC
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE     # Avoid text overlapping
)
n <- nrow(covid.data.pca)
wss <- rep(0, 8)
wss[1] <- (n-1)*sum(sapply(covid.data.pca, var))
for (i in 2:8)
wss[i] <- sum(kmeans(covid.data.pca, centers=i)$withinss)
plot(1:8, wss, type = "b", xlab = "Number of groups", ylab = "Within groups sum of squares")
km <- kmeans(covid.data.pca, centers=6)
km.labels <- km$cluster
# Visualize clustering k means with PCA
plot(covid.data.pca, col=km.labels)
