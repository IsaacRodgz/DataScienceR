ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:200) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:200) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:200) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:2000) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:2000) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:2000) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:2000) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:2000) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:2000) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:2000) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:2000) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:2000) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:2000) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:2000) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:2000) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:2000) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:10000) {
s <- sample(total, length(total))
am_s <- s[0:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
tv[0]
tv[1]
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:10000) {
s <- sample(total, length(total))
am_s <- s[1:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:10000) {
s <- sample(total, length(total))
am_s <- s[1:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:10000) {
s <- sample(total, length(total))
am_s <- s[1:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:10000) {
s <- sample(total, length(total))
am_s <- s[1:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:10000) {
s <- sample(total, length(total))
am_s <- s[1:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
prconp?
;
help("prcomp")
library (intoo)
library (bivariate)
library (MASS)
help(dbinom)
help(dnorm)
x <- c(dnorm(100, 5, 1), dnorm(100, 6, 2))
plot(x)
x
x
dnorm(100, 5, 1)
help(dnorm)
x <- c(rnorm(100, 5, 1), rnorm(100, 6, 2))
plot(x)
x
plot(rnorm(100, 5, 1), rnorm(100, 6, 2))
A = matrix(
c(rnorm(100, 5, 1), rnorm(100, 6, 2)), # the data elements
nrow=100,              # number of rows
ncol=2,              # number of columns
byrow = TRUE)
A
plot(A)
help("prcomp")
prcomp(A, center = FALSE)
pca <- prcomp(A, center = FALSE)
plot(pca)
help(biplot)
prcomp(A, center = FALSE).pca
pc <- prcomp(A, center = FALSE)
pc.pca
pc
fviz_eig(pc)
pc
pc.PC1
plot(c(-0.72, -0.68))
prcomp(A, center = TRUE).pca
prcomp(A, center = TRUE)
plot(A)
library('MASS')
A <- mvrnorm(n = 100, c(5,6), cbind(c(1,2),c(2,5)), tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
plot(A)
A <- mvrnorm(n = 100, c(5,6), cbind(c(1,-2),c(2,5)), tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
plot(A)
A <- mvrnorm(n = 100, c(5,6), cbind(c(1,-2),c(-2,5)), tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
plot(A)
A
prcomp(A, center = FALSE)
prcomp(A, center = FALSE, scale = TRUE)
pc <- prcomp(A, center = FALSE, scale = TRUE)
biplot(x = pc, scale = 0, cex = 0.6, col = c("x", "y\"))
:
;
:
::;;
;\
)
)
\
))))
biplot(x = pc, scale = 0, cex = 0.6, col = c("x", "y"))
biplot(x = pc, scale = 0, cex = 0.6, col = c("x", "y"))
biplot(x = pc, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
help("biplot")
biplot(x = pc, y = A, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
biplot(x = pc, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
help("biplot")
pc
pc <- prcomp(A, center = FALSE, scale = FALSE)
pc
biplot(x = pc, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
A <- mvrnorm(n = 20, c(5,6), cbind(c(1,-2),c(-2,5)), tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
pc <- prcomp(A, center = FALSE, scale = FALSE)
biplot(x = pc, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
pc
library(stats)
library(FactoMineR)
install.packages(FactoMineR)
install.packages('FactoMineR')
install.packages("FactoMineR")
install.packages("FactoMineR")
biplot(x = pc, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
pc.1
pc
prcomp(A, center = FALSE, scale = FALSE)
princomp(A, center = FALSE, scale = FALSE)
princomp(A)
pc
pc <- prcomp(A, center = FALSE, scale = FALSE)
pc
plot(A)
vecs = cbind(c(-0.633,-0.774),c(0.774,-0.633))
vecs
vecs <- cbind(c(-0.633,-0.774),c(0.774,-0.633))
lines(vecs,col="green")
par(new=TRUE)
lines(vecs,col="green")
lines(vecs(:, 0), vecs(:, 1),col="green")
vecs <- cbind(c(-0.633,-0.774),c(0.774,-0.633))
lines(c(-0.633,-0.774), c(0.774,-0.633),col="green")
plot(A)
plot(A)
plot(vecs)
plot(A)
plot(vecs, add = TRUE)
plot(A)
par(new=TRUE)
plot(vecs)
arrows(0,0,1,1)
lines(c(-0.633,-0.774), c(0.774,-0.633),col="green")
pc
pc(0)
pc[0]
pc[1]
pc[2]
pc[2]
A <- mvrnorm(n = 20, c(5,6), cbind(c(1,-2),c(-2,5)), tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
pc <- prcomp(A, center = FALSE, scale = FALSE)
plot(A)
par(new=TRUE)
plot(pc[2])
#lines(c(-0.633,-0.774), c(0.774,-0.633),col="green")
pc[2]
pc[2][0]
pc[2][1]
pc[2][1]
pc[2][1][1]
pc[2]
typeof(pc[2])
pcs = pc[2]
View(pcs)
pcs[1]
typeof(pcs[1])
pcs = pc[2][0]
View(pcs)
pcs = pc[2][1]
View(pcs)
pcs = pc[2]
View(pcs)
pcs = pc[2]$rotation
View(pcs)
plot(pc[2]$rotation)
A <- mvrnorm(n = 20, c(5,6), cbind(c(1,-2),c(-2,5)), tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
pc <- prcomp(A, center = FALSE, scale = FALSE)
plot(A)
par(new=TRUE)
plot(pc[2]$rotation)
#lines(c(-0.633,-0.774), c(0.774,-0.633),col="green")
pc <- prcomp(A, center = FALSE, scale = FALSE)
plot(A)
par(new=TRUE)
pcs <- pc[2]$rotation
plot(pcs)
lines(pcs[0,:], pcs[1,:])
pcs
pcs[0]
pc <- prcomp(A, center = FALSE, scale = FALSE)
plot(A)
par(new=TRUE)
pcs <- pc[2]$rotation
plot(pcs)
lines(pcs[1,:], pcs[2,:])
pcs[1]
pcs[1:]
pcs[1,:]
typeof(pcs)
pc
pcs
typeof(pcs)
pcs(:2)
pcs(2,)
pcs[1,]
pcs[,1]
pc <- prcomp(A, center = FALSE, scale = FALSE)
plot(A)
par(new=TRUE)
pcs <- pc[2]$rotation
plot(pcs)
lines(pcs[,1], pcs[,2])
pc <- prcomp(A, center = FALSE, scale = FALSE)
plot(A)
par(new=TRUE)
pcs <- pc[2]$rotation
plot(pcs)
lines(pcs[,1], pcs[,2], 'blue')
pc <- prcomp(A, center = FALSE, scale = FALSE)
plot(A)
par(new=TRUE)
pcs <- pc[2]$rotation
plot(pcs)
lines(pcs[,1], pcs[,2], col = "green")
biplot(x = pc, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
pc
install.packages("ggfortify")
install.packages("vegan")
data <- read.table("hepatlon (1)")
pwd()
getwd
getwd()
setwd("~/Doc")
setwd("~/Documents/CIMAT/DataScienceR/")
data <- read.table("hepatlon (1)")
install.packages("vegan")
help(isomap)
library("vegan")
data_iso <- isomap(data, k=3)
install.packages("RDRToolbox")
data_iso <- isomap(data, k=3)
daisy
library("cluster")
daisy
dis <- daisy(data, metric = "euclidean", stand = FALSE)
data_iso <- isomap(dis, k=3)
plot(ord, main="isomap k=3")
plot(data_iso, main="isomap k=3")
summary(data_iso)
View(data)
plot(x = data$score, y = [,1], )
data_iso$points[,1]
plot(x = data$score, y = data_iso$points[,1])
plot(data_iso, main="isomap k=3")
View(data)
dis
plot(x = data$score, y = data_iso$points[,1])
data
data2 <- data[-8]
dis <- vegdist(data2)
data2_iso <- isomap(dis, k=5)
plot(x = data$score, y = data2_iso$points[,1])
plot(x = data$score, y = data_iso$points[,1])
data2_iso
summary(data2_iso)
dis2 <- daisy(data2, metric = "euclidean", stand = FALSE)
data_iso <- isomap(dis2, k=3)
data_iso <- isomap(dis2, k=4)
data_iso <- isomap(dis2, k=5)
plot(x = data$score, y = data_iso$points[,1])
plot(data2_iso)
savehistory("~/Documents/CIMAT/DataScienceR/tarea2.Rhistory")
