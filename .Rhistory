}
p_val <- length(which(tv > tn))/length(tv)
p_val
tv[0]
tv[1]
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:10000) {
s <- sample(total, length(total))
am_s <- s[1:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:10000) {
s <- sample(total, length(total))
am_s <- s[1:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:10000) {
s <- sample(total, length(total))
am_s <- s[1:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:10000) {
s <- sample(total, length(total))
am_s <- s[1:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
am <- c(8.50, 9.48, 8.65, 8.16, 8.83, 7.76, 8.63)
ca <- c(8.27, 8.20, 8.25, 8.14, 9.00, 8.10, 7.20, 8.32, 7.70)
tn <- abs(median(am)-median(ca))
total <- c(ca, am)
for (i in 0:10000) {
s <- sample(total, length(total))
am_s <- s[1:7]
ca_s <- s[8:length(s)]
tv <- c(tv, abs(median(am_s)-median(ca_s)))
}
p_val <- length(which(tv > tn))/length(tv)
p_val
prconp?
;
help("prcomp")
library (intoo)
library (bivariate)
library (MASS)
help(dbinom)
help(dnorm)
x <- c(dnorm(100, 5, 1), dnorm(100, 6, 2))
plot(x)
x
x
dnorm(100, 5, 1)
help(dnorm)
x <- c(rnorm(100, 5, 1), rnorm(100, 6, 2))
plot(x)
x
plot(rnorm(100, 5, 1), rnorm(100, 6, 2))
A = matrix(
c(rnorm(100, 5, 1), rnorm(100, 6, 2)), # the data elements
nrow=100,              # number of rows
ncol=2,              # number of columns
byrow = TRUE)
A
plot(A)
help("prcomp")
prcomp(A, center = FALSE)
pca <- prcomp(A, center = FALSE)
plot(pca)
help(biplot)
prcomp(A, center = FALSE).pca
pc <- prcomp(A, center = FALSE)
pc.pca
pc
fviz_eig(pc)
pc
pc.PC1
plot(c(-0.72, -0.68))
prcomp(A, center = TRUE).pca
prcomp(A, center = TRUE)
plot(A)
library('MASS')
A <- mvrnorm(n = 100, c(5,6), cbind(c(1,2),c(2,5)), tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
plot(A)
A <- mvrnorm(n = 100, c(5,6), cbind(c(1,-2),c(2,5)), tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
plot(A)
A <- mvrnorm(n = 100, c(5,6), cbind(c(1,-2),c(-2,5)), tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
plot(A)
A
prcomp(A, center = FALSE)
prcomp(A, center = FALSE, scale = TRUE)
pc <- prcomp(A, center = FALSE, scale = TRUE)
biplot(x = pc, scale = 0, cex = 0.6, col = c("x", "y\"))
:
;
:
::;;
;\
)
)
\
))))
biplot(x = pc, scale = 0, cex = 0.6, col = c("x", "y"))
biplot(x = pc, scale = 0, cex = 0.6, col = c("x", "y"))
biplot(x = pc, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
help("biplot")
biplot(x = pc, y = A, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
biplot(x = pc, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
help("biplot")
pc
pc <- prcomp(A, center = FALSE, scale = FALSE)
pc
biplot(x = pc, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
A <- mvrnorm(n = 20, c(5,6), cbind(c(1,-2),c(-2,5)), tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
pc <- prcomp(A, center = FALSE, scale = FALSE)
biplot(x = pc, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
pc
library(stats)
library(FactoMineR)
install.packages(FactoMineR)
install.packages('FactoMineR')
install.packages("FactoMineR")
install.packages("FactoMineR")
biplot(x = pc, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
pc.1
pc
prcomp(A, center = FALSE, scale = FALSE)
princomp(A, center = FALSE, scale = FALSE)
princomp(A)
pc
pc <- prcomp(A, center = FALSE, scale = FALSE)
pc
plot(A)
vecs = cbind(c(-0.633,-0.774),c(0.774,-0.633))
vecs
vecs <- cbind(c(-0.633,-0.774),c(0.774,-0.633))
lines(vecs,col="green")
par(new=TRUE)
lines(vecs,col="green")
lines(vecs(:, 0), vecs(:, 1),col="green")
vecs <- cbind(c(-0.633,-0.774),c(0.774,-0.633))
lines(c(-0.633,-0.774), c(0.774,-0.633),col="green")
plot(A)
plot(A)
plot(vecs)
plot(A)
plot(vecs, add = TRUE)
plot(A)
par(new=TRUE)
plot(vecs)
arrows(0,0,1,1)
lines(c(-0.633,-0.774), c(0.774,-0.633),col="green")
pc
pc(0)
pc[0]
pc[1]
pc[2]
pc[2]
A <- mvrnorm(n = 20, c(5,6), cbind(c(1,-2),c(-2,5)), tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
pc <- prcomp(A, center = FALSE, scale = FALSE)
plot(A)
par(new=TRUE)
plot(pc[2])
#lines(c(-0.633,-0.774), c(0.774,-0.633),col="green")
pc[2]
pc[2][0]
pc[2][1]
pc[2][1]
pc[2][1][1]
pc[2]
typeof(pc[2])
pcs = pc[2]
View(pcs)
pcs[1]
typeof(pcs[1])
pcs = pc[2][0]
View(pcs)
pcs = pc[2][1]
View(pcs)
pcs = pc[2]
View(pcs)
pcs = pc[2]$rotation
View(pcs)
plot(pc[2]$rotation)
A <- mvrnorm(n = 20, c(5,6), cbind(c(1,-2),c(-2,5)), tol = 1e-6, empirical = FALSE, EISPACK = FALSE)
pc <- prcomp(A, center = FALSE, scale = FALSE)
plot(A)
par(new=TRUE)
plot(pc[2]$rotation)
#lines(c(-0.633,-0.774), c(0.774,-0.633),col="green")
pc <- prcomp(A, center = FALSE, scale = FALSE)
plot(A)
par(new=TRUE)
pcs <- pc[2]$rotation
plot(pcs)
lines(pcs[0,:], pcs[1,:])
pcs
pcs[0]
pc <- prcomp(A, center = FALSE, scale = FALSE)
plot(A)
par(new=TRUE)
pcs <- pc[2]$rotation
plot(pcs)
lines(pcs[1,:], pcs[2,:])
pcs[1]
pcs[1:]
pcs[1,:]
typeof(pcs)
pc
pcs
typeof(pcs)
pcs(:2)
pcs(2,)
pcs[1,]
pcs[,1]
pc <- prcomp(A, center = FALSE, scale = FALSE)
plot(A)
par(new=TRUE)
pcs <- pc[2]$rotation
plot(pcs)
lines(pcs[,1], pcs[,2])
pc <- prcomp(A, center = FALSE, scale = FALSE)
plot(A)
par(new=TRUE)
pcs <- pc[2]$rotation
plot(pcs)
lines(pcs[,1], pcs[,2], 'blue')
pc <- prcomp(A, center = FALSE, scale = FALSE)
plot(A)
par(new=TRUE)
pcs <- pc[2]$rotation
plot(pcs)
lines(pcs[,1], pcs[,2], col = "green")
biplot(x = pc, scale = 0, cex = 0.6, col = c("blue4", "brown3"))
pc
train.data <- read.csv("fashion-mnist_test.csv")
train.data.shirt <- train_data[train.data$label == 6]
setwd("~/Documents/CIMAT/NLP/")
setwd("~/Documents/CIMAT/NLP/")
train.data <- read.csv("fashion-mnist_test.csv")
train.data.shirt <- train_data[train.data$label == 6]
setwd("~/Documents/CIMAT/DataScienceR/")
train.data <- read.csv("fashion-mnist_test.csv")
train.data.shirt <- train_data[train.data$label == 6]
setwd("~/Documents/CIMAT/DataScienceR/")
train.data <- read.csv("fashion-mnist_train.csv")
train.data.shirt <- train_data[train.data$label == 6]
setwd("~/Documents/CIMAT/DataScienceR/")
train.data <- read.csv("fashion-mnist_train.csv")
train.data.shirt <- train.data[train.data$label == 6]
setwd("~/Documents/CIMAT/DataScienceR/")
train.data <- read.csv("fashion-mnist_train.csv")
train.data.shirt <- train.data[train.data$label == 6,]
train.data.shirt.iloc[0]
train.data.shirt[0,]
train.data <- read.csv("fashion-mnist_train.csv")
train.data.shirt <- train.data[train.data$label == 6,][-1]
library(Rtsne)
library(ggplot2)
set.seed(42)
shirt.matrix <- as.matrix(train.data.shirt)
dim(shirt.matrix)
tsne_out <- Rtsne(shirt.matrix, pca=FALSE, perplexity=30, theta=0.0, max_iter = 1000, check_duplicates = FALSE)
reduced_data <- as.data.frame(tsne_out$Y)
ggplot(reduced_data, aes(V1, V2)) + geom_point(alpha = 0.5)
tsne_out <- Rtsne(shirt.matrix, pca=FALSE, perplexity=50, theta=0.0, max_iter = 1000, check_duplicates = FALSE)
reduced_data <- as.data.frame(tsne_out$Y)
ggplot(reduced_data, aes(V1, V2)) + geom_point(alpha = 0.5)
tsne_out <- Rtsne(shirt.matrix, pca=FALSE, perplexity=80, theta=0.0, max_iter = 1000, check_duplicates = FALSE)
reduced_data <- as.data.frame(tsne_out$Y)
ggplot(reduced_data, aes(V1, V2)) + geom_point(alpha = 0.5)
tsne_out <- Rtsne(shirt.matrix, pca=FALSE, perplexity=100, theta=0.0, max_iter = 1000, check_duplicates = FALSE)
reduced_data <- as.data.frame(tsne_out$Y)
ggplot(reduced_data, aes(V1, V2)) + geom_point(alpha = 0.5)
tsne_out <- Rtsne(shirt.matrix, pca=FALSE, perplexity=200, theta=0.0, max_iter = 1000, check_duplicates = FALSE)
reduced_data <- as.data.frame(tsne_out$Y)
ggplot(reduced_data, aes(V1, V2)) + geom_point(alpha = 0.5)
tsne_out <- Rtsne(shirt.matrix, pca=FALSE, perplexity=250, theta=0.0, max_iter = 1000, check_duplicates = FALSE)
reduced_data <- as.data.frame(tsne_out$Y)
ggplot(reduced_data, aes(V1, V2)) + geom_point(alpha = 0.5)
View(tsne_out)
View(tsne_out)
tsne_out$Y[1:10,]
tsne_out$Y
View(tsne_out)
tsne_out$Y[order(tsne_out$Y$V1),]
tsne_out$Y
tsne_out$Y[order(tsne_out$Y[1,]),]
order(tsne_out$Y[1,])
order(tsne_out$Y[,1])
tsne_out$Y[order(tsne_out$Y[,1]),]
seq(1, 10)
reduced_index <- cbind(tsne_out$Y, seq(1, 6000))
reduced_indexp[1:5,]
reduced_index[1:5,]
reduced_ordered <- reduced_index[order(reduced_index[,1]),]
reduced_ordered[1:10,]
reduced_ordered[0,3]
reduced_ordered[0,3] + 2
as.integer(reduced_ordered[0,3])
reduced_ordered[1,3]
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in seq(1, 6000, 375)) {
m<-matrix(t(train.data.shirt[reduced_ordered[i,3],1+(1:(28*28))]), ncol=28)
image(rotate(rotate(m)), col=grey(seq(0, 1, length=256)))
}
m<-matrix(t(train.data.shirt[i,1+(1:(28*28))]), ncol=28)
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in seq(1, 6000, 375)) {
m<-matrix(t(train.data.shirt[i,1+(1:(28*28))]), ncol=28)
image(rotate(rotate(m)), col=grey(seq(0, 1, length=256)))
}
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in seq(1, 6000, 375)) {
m<-matrix(t(train.data.shirt[i,1+(1:(28*28))]), ncol=28)
image(rotate(rotate(m)), col=grey(seq(0, 1, length=256)))
}
for (i in seq(1, 6000, 375)) {
m<-matrix(t(train.data.shirt[i,1+(1:(28*28))]),ncol=28)
image(rotate(rotate(m)), col=grey(seq(0, 1, length=256)))
}
i = 13
m<-matrix(t(train.data.shirt[i,1+(1:(28*28))]),ncol=28)
image(rotate(rotate(m)), col=grey(seq(0, 1, length=256)))
rotate <- function(x) t(apply(x, 2, rev))
i = 13
m<-matrix(t(train.data.shirt[i,1+(1:(28*28))]),ncol=28)
image(rotate(rotate(m)), col=grey(seq(0, 1, length=256)))
m<-matrix(t(train.data.shirt[i,1+(1:(28*28))]),ncol=28)
i = 13
m<-matrix(t(train.data.shirt[i,(1:(28*28))]),ncol=28)
image(rotate(rotate(m)), col=grey(seq(0, 1, length=256)))
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in seq(1, 6000, 375)) {
m<-matrix(t(train.data.shirt[i,(1:(28*28))]),ncol=28)
image(rotate(rotate(m)), col=grey(seq(0, 1, length=256)))
}
reduced_ordered[1:10,]
reduced_ordered2 <- reduced_ordered[order(reduced_ordered[,2]),]
reduced_ordered2[1:10,]
ggplot(reduced_data, aes(V1, V2)) + geom_point(alpha = 0.5)
install.packages("ggimage")
library("ggimage")
library(ggimage)
d <- data.frame(tsne_out$Y[,1],
tsne_out$Y[,2],
image = sample(c("https://www.r-project.org/logo/Rlogo.png",
"https://jeroenooms.github.io/images/frink.png"),
size=10, replace = TRUE)
)
ggplot(d, aes(x, y)) + geom_image(aes(image=image), size=.05)
View(d)
colnames(d) <- c("x", "y", "image")
ggplot(d, aes(x, y)) + geom_image(aes(image=image), size=.05)
image(t(apply(m, 2, rev)), col=grey(seq(0,1,length=256)))
image(rotate(rotate(m)), col=grey(seq(0, 1, length=256)))
tsne_out$Y[,1]
typeof(tsne_out$Y[,1])
typeof(c())
help(sample)
images <- c()
for(i in 1:6000){
m<-matrix(t(train.data.shirt[i,(1:(28*28))]),ncol=28)
images <- c(images, image(rotate(rotate(m)), col=grey(seq(0, 1, length=256))))
}
d <- data.frame(tsne_out$Y[,1],
tsne_out$Y[,2],
image = images
)
)
image <- as.raster(m)
rasterImage(m, xleft=1 - 0.5,
ybottom= 1 - 0.5,
xright=1 + 0.5,
ytop= 1 + 0.5, interpolate=FALSE)
rasterImage(m,2,2,4,4)
rasterImage(image(rotate(rotate(m)), col=grey(seq(0, 1, length=256))),2,2,4,4)
ggplot(d, aes(x, y)) + geom_image(aes(image=image), size=.05)
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in seq(1, 6000, 375)) {
m<-matrix(t(train.data.shirt[i,(1:(28*28))]),ncol=28)
image(rotate(rotate(m)), col=grey(seq(0, 1, length=256)))
}
thumbnails <- function(x, y, images, width = 0.1*diff(range(x)),
height = 0.1*diff(range(y))){
images <- replicate(length(x), images, simplify=FALSE)
stopifnot(length(x) == length(y))
for (ii in seq_along(x)){
rasterImage(images[[ii]], xleft=x[ii] - 0.5*width,
ybottom= y[ii] - 0.5*height,
xright=x[ii] + 0.5*width,
ytop= y[ii] + 0.5*height, interpolate=FALSE)
}
}
plot(xy, t="n")
thumbnails(reduced_data[,1], reduced_data[,2], train.data.shirt)
thumbnails <- function(x, y, images, width = 0.1*diff(range(x)),
height = 0.1*diff(range(y))){
images <- replicate(length(x), images, simplify=FALSE)
stopifnot(length(x) == length(y))
for (ii in seq_along(x)){
m<-matrix(t(train.data.shirt[ii,(1:(28*28))]),ncol=28)
rasterImage(m, xleft=x[ii] - 0.5*width,
ybottom= y[ii] - 0.5*height,
xright=x[ii] + 0.5*width,
ytop= y[ii] + 0.5*height, interpolate=FALSE)
}
}
plot(reduced_data, t="n")
thumbnails(reduced_data[,1], reduced_data[,2], train.data.shirt)
max(as.numeric(unlist(m)))
thumbnails <- function(x, y, images, width = 0.1*diff(range(x)),
height = 0.1*diff(range(y))){
images <- replicate(length(x), images, simplify=FALSE)
stopifnot(length(x) == length(y))
for (ii in seq_along(x)){
m<-matrix(t(train.data.shirt[ii,(1:(28*28))]),ncol=28)/max(as.numeric(unlist(m)))
rasterImage(m, xleft=x[ii] - 0.5*width,
ybottom= y[ii] - 0.5*height,
xright=x[ii] + 0.5*width,
ytop= y[ii] + 0.5*height, interpolate=FALSE)
}
}
plot(reduced_data, t="n")
thumbnails(reduced_data[,1], reduced_data[,2], train.data.shirt)
thumbnails <- function(x, y, images, width = 0.1*diff(range(x)),
height = 0.1*diff(range(y))){
images <- replicate(length(x), images, simplify=FALSE)
stopifnot(length(x) == length(y))
for (ii in seq_along(x)){
m<-matrix(t(train.data.shirt[ii,(1:(28*28))]),ncol=28)
m <- m/max(as.numeric(unlist(m)))
rasterImage(m, xleft=x[ii] - 0.5*width,
ybottom= y[ii] - 0.5*height,
xright=x[ii] + 0.5*width,
ytop= y[ii] + 0.5*height, interpolate=FALSE)
}
}
plot(reduced_data, t="n")
thumbnails(reduced_data[,1], reduced_data[,2], train.data.shirt)
plot(reduced_data, t="n")
thumbnails(reduced_data[,1], reduced_data[,2], train.data.shirt)
thumbnails <- function(x, y, images, width = 0.1*diff(range(x)),
height = 0.1*diff(range(y))){
images <- replicate(length(x), images, simplify=FALSE)
stopifnot(length(x) == length(y))
for (ii in seq_along(x)){
m<-matrix(t(train.data.shirt[ii,(1:(28*28))]),ncol=28)
m <- rotate(m)/max(as.numeric(unlist(m)))
rasterImage(m, xleft=x[ii] - 0.5*width,
ybottom= y[ii] - 0.5*height,
xright=x[ii] + 0.5*width,
ytop= y[ii] + 0.5*height, interpolate=FALSE)
}
}
plot(reduced_data, t="n")
thumbnails(reduced_data[,1], reduced_data[,2], train.data.shirt)
par(mfrow=c(1,1))
plot(reduced_data, t="n")
thumbnails(reduced_data[,1], reduced_data[,2], train.data.shirt)
plot_images <- function(x, y, images, width = 0.1*diff(range(x)),
height = 0.1*diff(range(y))){
images <- replicate(length(x), images, simplify=FALSE)
stopifnot(length(x) == length(y))
for (i in seq_along(x)){
m<-matrix(t(train.data.shirt[i,(1:(28*28))]),ncol=28)
m <- rotate(m)/max(as.numeric(unlist(m)))
rasterImage(m, xleft=x[i] - 0.5*width,
ybottom= y[i] - 0.5*height,
xright=x[i] + 0.5*width,
ytop= y[i] + 0.5*height, interpolate=FALSE)
}
}
par(mfrow=c(1,1))
plot(reduced_data, t="n")
plot_images(reduced_data[,1], reduced_data[,2], train.data.shirt)
image(rotate(rotate(m)), col=grey(seq(0, 1, length=256)))
par(mfrow=c(1,1))
plot(reduced_data, t="n")
plot_images(reduced_data[,1], reduced_data[,2], train.data.shirt)
reduced_index <- cbind(tsne_out$Y, seq(1, 6000))
reduced_ordered <- reduced_index[order(reduced_index[,1]),]
par(mfrow=c(4, 4), mar=c(0, 0.2, 1, 0.2))
for (i in seq(1, 6000, 375)) {
m<-matrix(t(train.data.shirt[i,(1:(28*28))]),ncol=28)
image(rotate(rotate(m)), col=grey(seq(0, 1, length=256)))
}
